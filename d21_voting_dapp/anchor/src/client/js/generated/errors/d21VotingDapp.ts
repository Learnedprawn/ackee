/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from 'gill';
import { D21_VOTING_DAPP_PROGRAM_ADDRESS } from '../programs';

/** NameTooLong: Name should be less than 20 */
export const D21_VOTING_DAPP_ERROR__NAME_TOO_LONG = 0x1770; // 6000
/** DesciptionTooLong: Desciption should be less than 20 */
export const D21_VOTING_DAPP_ERROR__DESCIPTION_TOO_LONG = 0x1771; // 6001
/** StartDateInThePast: Start Date should be in future */
export const D21_VOTING_DAPP_ERROR__START_DATE_IN_THE_PAST = 0x1772; // 6002
/** EndDateAfterStart: End Date after Start Date */
export const D21_VOTING_DAPP_ERROR__END_DATE_AFTER_START = 0x1773; // 6003
/** VotingAfterEndDate: End Date crossed */
export const D21_VOTING_DAPP_ERROR__VOTING_AFTER_END_DATE = 0x1774; // 6004
/** RegistrationAfterEndDate: Can't register after end date */
export const D21_VOTING_DAPP_ERROR__REGISTRATION_AFTER_END_DATE = 0x1775; // 6005
/** NoCandidatesForResult: 0 candidates in election */
export const D21_VOTING_DAPP_ERROR__NO_CANDIDATES_FOR_RESULT = 0x1776; // 6006

export type D21VotingDappError =
  | typeof D21_VOTING_DAPP_ERROR__DESCIPTION_TOO_LONG
  | typeof D21_VOTING_DAPP_ERROR__END_DATE_AFTER_START
  | typeof D21_VOTING_DAPP_ERROR__NAME_TOO_LONG
  | typeof D21_VOTING_DAPP_ERROR__NO_CANDIDATES_FOR_RESULT
  | typeof D21_VOTING_DAPP_ERROR__REGISTRATION_AFTER_END_DATE
  | typeof D21_VOTING_DAPP_ERROR__START_DATE_IN_THE_PAST
  | typeof D21_VOTING_DAPP_ERROR__VOTING_AFTER_END_DATE;

let d21VotingDappErrorMessages: Record<D21VotingDappError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  d21VotingDappErrorMessages = {
    [D21_VOTING_DAPP_ERROR__DESCIPTION_TOO_LONG]: `Desciption should be less than 20`,
    [D21_VOTING_DAPP_ERROR__END_DATE_AFTER_START]: `End Date after Start Date`,
    [D21_VOTING_DAPP_ERROR__NAME_TOO_LONG]: `Name should be less than 20`,
    [D21_VOTING_DAPP_ERROR__NO_CANDIDATES_FOR_RESULT]: `0 candidates in election`,
    [D21_VOTING_DAPP_ERROR__REGISTRATION_AFTER_END_DATE]: `Can't register after end date`,
    [D21_VOTING_DAPP_ERROR__START_DATE_IN_THE_PAST]: `Start Date should be in future`,
    [D21_VOTING_DAPP_ERROR__VOTING_AFTER_END_DATE]: `End Date crossed`,
  };
}

export function getD21VotingDappErrorMessage(code: D21VotingDappError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (d21VotingDappErrorMessages as Record<D21VotingDappError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles.';
}

export function isD21VotingDappError<
  TProgramErrorCode extends D21VotingDappError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    D21_VOTING_DAPP_PROGRAM_ADDRESS,
    code
  );
}
